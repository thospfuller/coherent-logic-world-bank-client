<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:util="http://www.springframework.org/schema/util" xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

    <bean id="dataSource"
        class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.h2.Driver" />
        <!--
             To be used together:

             C:\development\software\h2-2016-05-26\bin>java -jar h2-1.4.192.jar -web -webAllowOthers -tcp -tcpAllowOthers -browser
             jdbc:h2:tcp://localhost/~/fred-db

             /////

             jdbc:h2:~/fred-data/fred-db;AUTO_SERVER=TRUE;AUTO_SERVER_PORT=9090;DB_CLOSE_DELAY=-1
             jdbc:h2:mem:fred-db;DB_CLOSE_DELAY=-1
             jdbc:h2:tcp://localhost/~/fred-db
          -->
        <property name="url" value="jdbc:h2:tcp://localhost/~/worldbank-db" />
        <property name="username" value="sa" />
        <property name="password" value="password" />
    </bean>

    <bean id="entityManagerFactory"
        class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="com.coherentlogic.wb.client" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="true" />
                <property name="generateDdl" value="true" />
                <property name="databasePlatform" value="org.hibernate.dialect.H2Dialect" />
            </bean>
        </property>
        <property name="jpaProperties">
            <props>
                <!--
                  This is to address the defect below, which was introduced in FDM version 1.0.18 and FC 1.0.7-RELEASE.
                  The problem is that the @Column(name=LIMIT_VALUE) (see Seriess.java, for example) is being ignored
                  and "limit' is a reserved word (in the H2 database, specifically).

                  Other people have encountered this issue as well and the suggested fix is to change the
                  naming_strategy however this did not appear to remedy this problem, whereas adding the below
                  hibernate.format_sql and hibernate.hbm2ddl.auto properties does.

                  Caused by: org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CREATE TABLE TAGS (PRIMARYKEY
                  BIGINT NOT NULL, COUNT INTEGER NOT NULL, LIMIT[*] BIGINT NOT NULL, OFFSET INTEGER NOT NULL,
                  ORDER_BY_VALUE INTEGER, REALTIMEEND TIMESTAMP, REALTIMESTART TIMESTAMP, SORTORDER INTEGER, PRIMARY
                  KEY (PRIMARYKEY)) "; expected "identifier"; SQL statement:
                  create table tags (primaryKey bigint not null, count integer not null, limit bigint not null, offset
                  integer not null, order_by_value integer, realtimeEnd timestamp, realtimeStart timestamp, sortOrder
                  integer, primary key (primaryKey)) [42001-167]
                  -->
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">create-drop</prop>
                <!-- prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.DefaultNamingStrategy</prop -->
            </props>
        </property> 
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" />
</beans>